name: CD
on:
  push: 
    branches: [master]

  workflow_dispatch:

env:
  SERVER_HOST: 92.63.64.241
  SERVER_USER: laborant
  SERVER_PATH: hw-back

jobs:
  build-account-api:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Restore
        working-directory: ./HW.Account.API
        run: dotnet restore "HW.Account.API.csproj"
        
      - name: Build
        working-directory: ./HW.Account.API
        run: dotnet build "HW.Account.API.csproj" -c Release

  build-backend-api:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Restore
        working-directory: ./HW.Backend.API
        run: dotnet restore "HW.Backend.API.csproj"
        
      - name: Build
        working-directory: ./HW.Backend.API
        run: dotnet build "HW.Backend.API.csproj" -c Release

  build-email-reciever-mvc:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Restore
        working-directory: ./HW.EmailReciever.MVC
        run: dotnet restore "HW.EmailReciever.MVC.csproj"
        
      - name: Build
        working-directory: ./HW.EmailReciever.MVC
        run: dotnet build "HW.EmailReciever.MVC.csproj" -c Release

  build-file-manager-api:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Restore
        working-directory: ./HW.FileManager.API
        run: dotnet restore "HW.FileManager.API.csproj"
        
      - name: Build
        working-directory: ./HW.FileManager.API
        run: dotnet build "HW.FileManager.API.csproj" -c Release

  build-notification-api:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Restore
        working-directory: ./HW.Notification.API
        run: dotnet restore "HW.Notification.API.csproj"
        
      - name: Build
        working-directory: ./HW.Notification.API
        run: dotnet build "HW.Notification.API.csproj" -c Release
        
  deploy:
    needs:
      - build-account-api
      - build-backend-api
      - build-email-reciever-mvc
      - build-file-manager-api
      - build-notification-api
    
    runs-on: ubuntu-latest
    steps:
      # Setup key
      - run: set -eu
      - run: mkdir "$HOME/.ssh"
      - run: echo "${{ secrets.KEY }}" > "$HOME/.ssh/key" 
      - run: chmod 600 "$HOME/.ssh/key"
  
      # Deploy
      - run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete . ${{env.SERVER_USER}}@${{env.SERVER_HOST}}:${{env.SERVER_PATH}}
  
      - run: ssh -p ${{ secrets.PASSWORD }} ${{env.SERVER_USER}}@${{env.SERVER_HOST}} 'sudo docker-compose up -d'
